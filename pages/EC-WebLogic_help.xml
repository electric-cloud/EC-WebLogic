<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
    <title>@PLUGIN_KEY@ Plugin</title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css" type="text/css" media="screen"/>
</head>
<body>
<!--
    Generated by PluginWizardHelp
    https://github.com/electric-cloud/PluginWizardHelp
    Do *NOT* edit manually, use help file generation.
-->
<div class="help">
    <h1>@PLUGIN_KEY@</h1>
    <p>Plugin version @PLUGIN_VERSION@</p>
    
    <p>Revised on June 20, 2018</p>
    
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade"/>
    <h3>Overview</h3>
    <p><p>WebLogic is a server software application that runs on a
middle tier, between back-end databases and related
applications and browser-based thin clients. The main
features of WebLogic server include connectors that make it
possible for any legacy application on any client to
interoperate with server applications, Enterprise JavaBean
(EJB) components, resource pooling, and connection sharing
that make applications very scalable. An administration
console with a user interface makes management tasks more
efficient and features such as Secure Sockets Layer (SSL)
support for the encryption of data transmissions, as well
as authentication and authorization mechanisms, make
applications and secure.</p>
<p>For more information about WebLogic, go to <a href="http://www.oracle.com/technetwork/middleware/weblogic/overview/index.html" target="_blank">WebLogic home page</a>.</p>
<h2>ElectricFlow Integration to WebLogic</h2>
<p>Use this plugin to interact with the Oracle WebLogic server for application
and server management, interacting or editing existing applications, and deploying new applications.
You can start and stop both the Managed Servers and the Administration Server
using this integration. You can use Jython scripting to create script files
or to enter a new embedded file.</p>
<h2>Integrated Version</h2>
<p>This plugin was developed and tested against following WebLogic Server Versions:</p>
<ul>
<li>12c (12.2.1.1.0) on Windows</li>
<li>12c (12.2.1.1.0) on Linux</li>
<li>11g (10.3.6.0) on Windows</li>
<li>11g (10.3.6.0) on Linux</li>
</ul>
</p>
    
    <h1>Contents</h1>
    <ul>
    <li><a href="#overview">Overview</a></li>
    
    <li><a href="#CreateConfiguration">Plugin Configuration</a></li>
    
    <li><a href="#procedures">Plugin Procedures</a></li>
    <ul>
        

        <li><a href="#AddServerToCluster">AddServerToCluster</a></li>
        

        <li><a href="#AddUserToGroup">AddUserToGroup</a></li>
        

        <li><a href="#ChangeUserPassword">ChangeUserPassword</a></li>
        

        <li><a href="#CheckClusterStatus">CheckClusterStatus</a></li>
        

        <li><a href="#CheckPageStatus">CheckPageStatus</a></li>
        

        <li><a href="#CheckServerStatus">CheckServerStatus</a></li>
        

        <li><a href="#ConfigureUserLockoutManager">ConfigureUserLockoutManager</a></li>
        

        <li><a href="#CreateCluster">CreateCluster</a></li>
        

        <li><a href="#CreateDatasource">CreateDatasource</a></li>
        

        <li><a href="#CreateDomain">CreateDomain</a></li>
        

        <li><a href="#CreateGroup">CreateGroup</a></li>
        

        <li><a href="#CreateManagedServer">CreateManagedServer</a></li>
        

        <li><a href="#CreateOrUpdateConnectionFactory">CreateOrUpdateConnectionFactory</a></li>
        

        <li><a href="#CreateOrUpdateJMSModule">CreateOrUpdateJMSModule</a></li>
        

        <li><a href="#CreateOrUpdateJMSModuleSubdeployment">CreateOrUpdateJMSModuleSubdeployment</a></li>
        

        <li><a href="#CreateOrUpdateJMSQueue">CreateOrUpdateJMSQueue</a></li>
        

        <li><a href="#CreateOrUpdateJMSServer">CreateOrUpdateJMSServer</a></li>
        

        <li><a href="#CreateOrUpdateJMSTopic">CreateOrUpdateJMSTopic</a></li>
        

        <li><a href="#CreateTemplate">CreateTemplate</a></li>
        

        <li><a href="#CreateUser">CreateUser</a></li>
        

        <li><a href="#DeleteCluster">DeleteCluster</a></li>
        

        <li><a href="#DeleteConnectionFactory">DeleteConnectionFactory</a></li>
        

        <li><a href="#DeleteDatasource">DeleteDatasource</a></li>
        

        <li><a href="#DeleteGroup">DeleteGroup</a></li>
        

        <li><a href="#DeleteJMSModule">DeleteJMSModule</a></li>
        

        <li><a href="#DeleteJMSModuleSubdeployment">DeleteJMSModuleSubdeployment</a></li>
        

        <li><a href="#DeleteJMSQueue">DeleteJMSQueue</a></li>
        

        <li><a href="#DeleteJMSServer">DeleteJMSServer</a></li>
        

        <li><a href="#DeleteJMSTopic">DeleteJMSTopic</a></li>
        

        <li><a href="#DeleteManagedServer">DeleteManagedServer</a></li>
        

        <li><a href="#DeleteUser">DeleteUser</a></li>
        

        <li><a href="#DeployApp">DeployApp</a></li>
        

        <li><a href="#RemoveUserFromGroup">RemoveUserFromGroup</a></li>
        

        <li><a href="#ResumeServer">ResumeServer</a></li>
        

        <li><a href="#RunDeployer">RunDeployer</a></li>
        

        <li><a href="#RunWLST">RunWLST</a></li>
        

        <li><a href="#StartAdminServer">StartAdminServer</a></li>
        

        <li><a href="#StartApp">StartApp</a></li>
        

        <li><a href="#StartCluster">StartCluster</a></li>
        

        <li><a href="#StartManagedServer">StartManagedServer</a></li>
        

        <li><a href="#StartNodeManager">StartNodeManager</a></li>
        

        <li><a href="#StopAdminServer">StopAdminServer</a></li>
        

        <li><a href="#StopApp">StopApp</a></li>
        

        <li><a href="#StopCluster">StopCluster</a></li>
        

        <li><a href="#StopManagedServer">StopManagedServer</a></li>
        

        <li><a href="#StopNodeManager">StopNodeManager</a></li>
        

        <li><a href="#SuspendServer">SuspendServer</a></li>
        

        <li><a href="#UndeployApp">UndeployApp</a></li>
        

        <li><a href="#UnlockUserAccount">UnlockUserAccount</a></li>
        

        <li><a href="#UpdateApp">UpdateApp (DEPRECATED)</a></li>
        

        <li><a href="#UpdateAppConfig">UpdateAppConfig</a></li>
        
    </ul>
    
    <li><a href="#usecases">Use Cases</a></li>
    <ul>
        
        <li><a href="#RunWLST">Run WLST</a></li>
        
    </ul>
    
    
    <li><a href="#releaseNotes">Release Notes</a></li>
</ul>
    
    <div id="CreateConfiguration">
        <a name='CreateConfiguration' id="CreateConfiguration"> </a>
        <h2>Plugin Configurations</h2>

        <p>
            Plugin configurations are sets of parameters that apply
            across some or all of the plugin procedures. They
            reduce repetition of common values, create
            predefined parameter sets for end users, and
            securely store credentials where needed. Each configuration
            is given a unique name that is entered in designated
            parameters on procedures that use them.<br /><br />
        </p>

        <h3>Creating Plugin Configurations</h3>
        <p>To create plugin configurations in ElectricFlow,
            do these steps:</p>

        <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
        <li>Find the @PLUGIN_NAME@ row.</li>
        <li>Click <b>Configure</b> to open the
             Configurations page.</li>
        <li>Click <b>Create Configuration</b>.</li>
        
        <img src="../../plugins/EC-WebLogic/images/Config/EC-WLSConfig.png" />
<p><strong>Note:</strong> In the URL, the protocol is &quot;t3.&quot; The
RMI communications in WebLogic Server use
the &quot;t3&quot; protocol to transport data between WebLogic
Server and other Java programs, including clients and
other WebLogic Server instances. A server instance
keeps track of each Java Virtual Machine (JVM) with
which it connects, and creates a single &quot;t3&quot; connection
to carry all traffic for a JVM. This proctocol is used
in most of the procedures of the WebLogic Plugin.</p>

        
        Configuration Parameters
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td></td>
            </tr>
            
            <tr>
                <td class="required">WebLogic URL</td>
                <td>URL of WebLogic Server (must include protocol, server and port).</td>
            </tr>
            
            <tr>
                <td >WLST Script Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'. Setting this path will make applying the equal param in procedures unnecessary.</td>
            </tr>
            
            <tr>
                <td >JAVA_HOME</td>
                <td>JAVA_HOME environment variable, i.e. path to bin, where java executable is located. This variable will be set every time procedure runs for the job environment. Warning: the behaviour of the procedure can become unpredictable, if the same resource is shared across multiple EF instances. If this option is set, JAVA_VENDOR should be also set.</td>
            </tr>
            
            <tr>
                <td >JAVA_VENDOR</td>
                <td>JAVA_VENDOR environment variable, use it to specify java vendor. This variable will be set every time procedure runs for the job environment. Warning: the behaviour of the procedure can become unpredictable, if the same resource is shared across multiple EF instances. If this option is set, the option JAVA_HOME should be also set. </td>
            </tr>
            
            <tr>
                <td >MW_HOME</td>
                <td>MW_HOME environment variable, use it to specify WebLogic Home directory. This variable will be set every time procedure runs for the job environment. Warning: the behaviour of the procedure can become unpredictable, if the same resource is shared across multiple EF instances.</td>
            </tr>
            
            <tr>
                <td >Login as</td>
                <td></td>
            </tr>
            
            <tr>
                <td >Enable named sessions?</td>
                <td>
            If checked, each WebLogic edit session will have unique name assigned. Named sessions are not supported by WebLogic server prior to 12 version. Defaults to false.
        </td>
            </tr>
            
            <tr>
                <td >Debug level</td>
                <td>Debug level, higher debug level - more debug messages. Warning: on debug level 10 and more passwords will be revealed in a procedure logs.Verbosity level of output.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>
    

    <h1 id="procedures">Plugin Procedures</h1>
    

    
    <div id="AddServerToCluster">
        <h2>AddServerToCluster</h2>
        <p>Add server to cluster.</p>
        
            <p>This procedure adds a server to the specified cluster.</p>

        
        <h3>AddServerToCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of the server which is to be added to cluster.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the cluster in which server is to be added.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the page was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/AddServerToCluster/EC-WLSAddServerToClusterStatus3.png" />
<p>In the <b>AddServerToCluster</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/AddServerToCluster/EC-WLSAddServerToClusterStatus4.png" />
<p>
    <b>Note:</b> In the URL, the protocol is http. For this procedure,ElectricFlow uses an internal method to test the status of the page URLs with the original http protocol used in the web browsers.
</p>

        </p>
        
    </div>

    
    <div id="AddUserToGroup">
        <h2>AddUserToGroup</h2>
        <p>Add a user to group.</p>
        
            <p>This procedure adds a User to the specified Group.</p>

        
        <h3>AddUserToGroup Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">User Name</td>
                <td>Name of the user to be added.</td>
            </tr>
            
            <tr>
                <td class="required">Group Name</td>
                <td>Name of the group in which user is to be added.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/AddUserToGroup/EC-WLSAddUserToGroupStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the page was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/AddUserToGroup/EC-WLSAddUserToGroupStatus3.png" />
<p>In the <b>AddUserToGroup</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/AddUserToGroup/EC-WLSAddUserToGroupStatus4.png" />
<p><b>Note:</b> In the URL, the protocol is http. For this procedure, ElectricFlow uses an internal method to test the status of the page URLs with the original http protocol used in the web browsers.</p>

        </p>
        
    </div>

    
    <div id="ChangeUserPassword">
        <h2>ChangeUserPassword</h2>
        <p>Change password of a user.</p>
        
            <p>This procedure can be used to change the password of a specific user.</p>

        
        <h3>ChangeUserPassword Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Old User Credentials</td>
                <td>Old user credentials(username and password).</td>
            </tr>
            
            <tr>
                <td class="required">New User Credentials</td>
                <td>New user credentials(Username and password). Username should be same as username in old credentials.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/ChangeUserPassword/EC-WLSChangeUserPasswordStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the page was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/ChangeUserPassword/EC-WLSChangeUserPasswordStatus3.png" />
<p>In the <b>ChangeUserPassword</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/ChangeUserPassword/EC-WLSChangeUserPasswordStatus4.png" />
<p><b>Note:</b> In the URL, the protocol is http. For this procedure, ElectricFlow uses an internal method to test the status of the page URLs with the original http protocol used in the web browsers.</p>

        </p>
        
    </div>

    
    <div id="CheckClusterStatus">
        <h2>CheckClusterStatus</h2>
        <p>Check the status of the given server cluster name.</p>
        
            <p>This procedure checks the status of the specified cluster.</p>

        
        <h3>CheckClusterStatus Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wlst Script Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the cluster. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            <tr>
                <td class="required">Success Criteria</td>
                <td>Indicates the expected correct result to be obtained when running checking the cluster.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Indicates the name of the cluster to be checked.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CheckClusterStatus/EC-WLSCheckClusterStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the cluster was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CheckClusterStatus/EC-WLSCheckClusterStatus3.png" />
<p>In the <b>CheckClusterStatus</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CheckClusterStatus/EC-WLSCheckClusterStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="CheckPageStatus">
        <h2>CheckPageStatus</h2>
        <p>Check the status of a page on a given URL</p>
        
            <p>This procedure checks the status of the specified page.</p>

        
        <h3>CheckPageStatus Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td >Credentials to be entered</td>
                <td>The credentials needed to check the status of the page.</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the server. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            <tr>
                <td class="required">Target URL</td>
                <td>URL of the page to be checked. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Success Criteria</td>
                <td>Indicates the expected correct result to be obtained when running checking the server.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CheckPageStatus/WLSCheckPageStatus2.png" />
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the page was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CheckPageStatus/EC-WLSCheckPageStatus3.png" />
<p>In the <em>CheckPageStatus</em> step, click the Log button to see the diagnostic information:</p>
<img src="../../plugins/EC-WebLogic/images/CheckPageStatus/EC-WLSCheckPageStatus4.png" />
<p><b>Note:</b> In the URL, the protocol is http. For this procedure, ElectricFlow uses an internal method to test the status of the page URLs with the original http protocol used in the web browsers.</p>

        </p>
        
    </div>

    
    <div id="CheckServerStatus">
        <h2>CheckServerStatus</h2>
        <p>Check the status of the given server URL</p>
        
            <p>This procedure checks the status of the specified server.</p>

        
        <h3>CheckServerStatus Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wlst Script Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the server. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            <tr>
                <td class="required">Success Criteria</td>
                <td>Indicates the expected correct result to be obtained when running checking the server.</td>
            </tr>
            
            <tr>
                <td class="required">Instance Name</td>
                <td>Indicates the name of the instance to be checked.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CheckServerStatus/EC-WLSCheckServerStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the server was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CheckServerStatus/EC-WLSCheckServerStatus3.png" />
<p>In the <b>CheckServerStatus</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CheckServerStatus/EC-WLSCheckServerStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="ConfigureUserLockoutManager">
        <h2>ConfigureUserLockoutManager</h2>
        <p>Configure User Lockout Manager.</p>
        
            <p>This procedure can be used to configure the User Lockout configuration.</p>

        
        <h3>ConfigureUserLockoutManager Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Lockout Threshold</td>
                <td>The maximum number of consecutive invalid login attempts that can occur before a user's account is locked out. Minimum value: 1, Maximum value: 2147483647.</td>
            </tr>
            
            <tr>
                <td >Lockout Duration</td>
                <td>The number of minutes that a user's account is locked out. Minimum value: 0, Maximum value: 2147483647.</td>
            </tr>
            
            <tr>
                <td >Lockout Enabled</td>
                <td>Specifies whether the server locks users out when there are invalid login attempts on their account.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/ConfigureUserLockoutManager/EC-WLSConfigureUserLockoutManagerStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the server was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/ConfigureUserLockoutManager/EC-WLSConfigureUserLockoutManagerStatus3.png" />
<p>In the <b>ConfigureUserLockoutManager</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/ConfigureUserLockoutManager/EC-WLSConfigureUserLockoutManagerStatus4.png" />
<img src="../../plugins/EC-WebLogic/images/ConfigureUserLockoutManager/EC-WLSConfigureUserLockoutManagerStatus5.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateCluster">
        <h2>CreateCluster</h2>
        <p>Create a cluster.</p>
        
            <p>This procedure can be used to ceate a new cluster.</p>

        
        <h3>CreateCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the cluster to be created.</td>
            </tr>
            
            <tr>
                <td >Multicast Address</td>
                <td>Multicast IP Address.</td>
            </tr>
            
            <tr>
                <td >Multicast Port</td>
                <td>Multicast Port.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/CreateCluster/EC-WLSCreateClusterStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the server was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateCluster/EC-WLSCreateClusterStatus3.png" />
<p>In the <b>CreateCluster</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CreateCluster/EC-WLSCreateClusterStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateDatasource">
        <h2>CreateDatasource</h2>
        <p>Creates a Datasource</p>
        
            <p>This procedure creates a datasource in WebLogic.</p>

        
        <h3>CreateDatasource Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Datasource Name</td>
                <td>A unique name that identifies this Datasource in the WebLogic domain.</td>
            </tr>
            
            <tr>
                <td class="required">Database</td>
                <td>The database used by the Datasource.</td>
            </tr>
            
            <tr>
                <td class="required">Server Instance</td>
                <td>Instance name of the Server to include the Datasource. i.e: 'AdminServer'.</td>
            </tr>
            
            <tr>
                <td >Datasource JNDI</td>
                <td>
      The JNDI path to where this Datasource is bound. By default, the JNDI name is the name of the Datasource. Applications that look up the JNDI path will get a "javax.sql.Datasource" instance that corresponds to this Datasource.
    </td>
            </tr>
            
            <tr>
                <td class="required">Datasource Driver Class</td>
                <td>
      The full package name of JDBC driver class used to create the physical database connections in the connection pool. (Note that this driver class must be in the classpath of any server to which it is deployed).
    </td>
            </tr>
            
            <tr>
                <td class="required">Datasource URL</td>
                <td>
    The URL of the database to connect to. The format of the URL varies by JDBC driver. The URL is passed to the JDBC driver to create the physical database connections.
  </td>
            </tr>
            
            <tr>
                <td class="required">Database User</td>
                <td>The user to connect to the database.</td>
            </tr>
            
            <tr>
                <td class="required">Database Password</td>
                <td>
      The password attribute passed to the JDBC driver when creating physical database connections. The value is stored in an encrypted form in the descriptor file and when displayed on the Administration Console.
    </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/CreateDataSource/CreateDataSource2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateDataSource/CreateDataSource3.png" />
<p>In the <b>CreateDatasource</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CreateDataSource/CreateDataSource4.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateDomain">
        <h2>CreateDomain</h2>
        <p>Create a domain</p>
        
            <p>This procedure creates a new domain on the WebLogic server.</p>

        
        <h3>CreateDomain Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">User Credentials</td>
                <td>Credentials of the user(Username and password).</td>
            </tr>
            
            <tr>
                <td class="required">Domain Template</td>
                <td>Name and location of the domain template from which you want to create a domain.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Directory</td>
                <td>Name of the directory to which you want to write the domain configuration information. .</td>
            </tr>
            
            <tr>
                <td >Listen Address</td>
                <td>Server Listen Address.</td>
            </tr>
            
            <tr>
                <td >Listen Port</td>
                <td>Server Listen Port.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateDomain/EC-WLSCreateDomainStatus2.png" />
<br/>
</ol>
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateDomain/EC-WLSCreateDomainStatus3.png" />
<p>In the <b>CreateDomain</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CreateDomain/EC-WLSCreateDomainStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateGroup">
        <h2>CreateGroup</h2>
        <p>Create a group</p>
        
            <p>This procedure creates a new user group on the WebLogic server.</p>

        
        <h3>CreateGroup Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Group Name</td>
                <td>Name of the group to be created.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the group domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the group realm.</td>
            </tr>
            
            <tr>
                <td >Group Description</td>
                <td>Description about the group.</td>
            </tr>
            
            <tr>
                <td >Overwrite Existing Group</td>
                <td>If enabled it will delete already existing group of the same name and recreate new group.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/CreateGroup/EC-WLSCreateGroupStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateGroup/EC-WLSCreateGroupStatus3.png" />
<p>In the <b>CreateGroup</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CreateGroup/EC-WLSCreateGroupStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateManagedServer">
        <h2>CreateManagedServer</h2>
        <p>Create a Managed Server.</p>
        
        <h3>CreateManagedServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of the managed server to be created.</td>
            </tr>
            
            <tr>
                <td >Listen Address</td>
                <td>Server Listen Address.</td>
            </tr>
            
            <tr>
                <td >Listen Port</td>
                <td>Server Listen Port.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/CreateManagedServer/EC-WLSCreateManagedServer2.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Managed Server was created successfully.
<img src="../../plugins/EC-WebLogic/images/CreateManagedServer/EC-WLSCreateManagedServer3.png" /></p>
<p>In the <b>CreateManagedServer</b> step, click the Log button to see the diagnostic information:</p>
<img src="../../plugins/EC-WebLogic/images/CreateManagedServer/EC-WLSCreateManagedServer4.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateConnectionFactory">
        <h2>CreateOrUpdateConnectionFactory</h2>
        <p>Creates or updates Connection Factory</p>
        
            <p>WebLogic Server defines two default connection factories, which can be looked up using the JNDI names weblogic.jms.ConnectionFactory and weblogic.jms.XAConnectionFactory.</p>
<p>This procedure is used to create and configure a new connection factory for an existing JMS module if the pre-configured settings of the default factories are not suitable for your application.</p>
<p>It is recommended to use default targeting for the Connection Factory, i.e. do not use Subdeployments.</p>

        
        <h3>CreateOrUpdateConnectionFactory Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Connection Factory Name</td>
                <td>Unique name of the Connection Factory that is created.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Name of the JMS module in which the Connection Factory is created.</td>
            </tr>
            
            <tr>
                <td class="required">Subscription Sharing Policy</td>
                <td>The Connection Factory Subscription Sharing Policy Subscribers can be used to control which subscribers can access new subscriptions.Values can be either Sharable or Exclusive.
        </td>
            </tr>
            
            <tr>
                <td class="required">Client ID Policy</td>
                <td>The Client ID Policy indicates whether more than one JMS connection can use the same Client ID. Oracle recommends setting the Client ID policy to Unrestricted if sharing durable subscribers. Subscriptions created with different Client ID policies are always treated as independent subscriptions.
        </td>
            </tr>
            
            <tr>
                <td >JNDI Name</td>
                <td>JNDI Name is used to lookup the Connection factory using JNDI lookup. If the connection factory is created without passing this parameter, it can be only used in an Application Scoped context.</td>
            </tr>
            
            <tr>
                <td >Maximum Messages per Session</td>
                <td>This  limit specifies the number of messages that can be queued for an asynchronous session. Default value  is 10.</td>
            </tr>
            
            <tr>
                <td >XA Connection Factory Enabled?</td>
                <td>Indicates if this connection factory should  create XA queues and XA topics in order to accommodate JTA aware transactions. Default is Yes.</td>
            </tr>
            
            <tr>
                <td >Subdeployment Name</td>
                <td>Name of Subdeployment. Required only if you do not  want default targeting and instead want to use advanced targeting.</td>
            </tr>
            
            <tr>
                <td >Target WLS Instance List</td>
                <td>
        Comma delimited set of Weblogic Server instances (Standalone or cluster) to which the Connection Factory would be targeted to.<br/>
        Required only if Subdeployment Name is specified.
        </td>
            </tr>
            
            <tr>
                <td >Target JMS Server List</td>
                <td>Comma delimited set of JMS Servers to which the Connection Factory would be targeted to.
Required only if Subdeployment Name is specified. </td>
            </tr>
            
            <tr>
                <td >Update Action</td>
                <td>
This parameter controls as to what the Update Action should be when a Connection Factory with the same name exists:<br/><b>Do Nothing  (Default)</b> -  The procedure will take no action upon an update (i.e., will be a NO-OP), if this option is chosen.<br/><b>Remove and Create</b> - The procedure would remove existing Connection Factory and recreate it based on new parameters passed.<br/><b>Selective Update</b> - The procedure would update existing Connection Factory. The parameters for selective update are <b>JNDI Name</b> and <b>Subdeployment Name</b>.
        </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>
Use this option to pass related parameters that pertain to Delivery, Client, Transaction or Flow Control. E.g., <b>DefaultDeliveryParams.DefaultPriority=5</b>.
Several options are separated by a newline:<br/><pre>
DefaultDeliveryParams.DefaultPriority=5
FlowControlParams.FlowMaximum=500
FlowControlParams.FlowControlEnabled=true
</pre></td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateOrUpdateConnectionFactory/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Connection Factory was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateOrUpdateConnectionFactory/Summary.png" />
<p>In the <b>CreateOrUpdateConnectionFactory</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;additional_options&quot; with value &quot;&quot;
Got parameter &quot;cf_client_id_policy&quot; with value &quot;restricted&quot;
Got parameter &quot;cf_max_messages_per_session&quot; with value &quot;10&quot;
Got parameter &quot;cf_name&quot; with value &quot;TestCF&quot;
Got parameter &quot;cf_sharing_policy&quot; with value &quot;exclusive&quot;
Got parameter &quot;cf_xa_enabled&quot; with value &quot;1&quot;
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;jms_module_name&quot; with value &quot;TestModule&quot;
Got parameter &quot;jms_server_list&quot; with value &quot;&quot;
Got parameter &quot;jndi_name&quot; with value &quot;weblogic.test.CF&quot;
Got parameter &quot;subdeployment_name&quot; with value &quot;&quot;
Got parameter &quot;update_action&quot; with value &quot;do_nothing&quot;
Got parameter &quot;wls_instance_list&quot; with value &quot;AdminServer&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/create_or_update_connection_factory.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25636_20180607052153/exec_108308602360286.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25636_20180607052153/exec_108308602360286.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25636_20180607052153/exec_108308602360286.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] Connection Factory TestCF does not exist
[WLST INFO] Created Connection Factory TestCF
[WLST INFO] Set JNDI Name to weblogic.test.CF
[WLST INFO] Set default targeting
[WLST INFO] Options:
[WLST INFO] Additional Options: {}

All changes that are made but not yet activated are:

MBean Changed : com.bea:Name=TestModule,Type=weblogic.j2ee.descriptor.wl.JMSBean,Parent=[base_domain]/JMSSystemResources[TestModule],Path=JMSResource
Operation Invoked : create
Attribute Modified : ConnectionFactories
Attributes Old Value : null
Attributes New Value : TestCF
Server Restart Required : false

Validating changes ...
Validated the changes successfully
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
SUMMARY: Created Connection Factory TestCF, Set Default Targeting
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSModule">
        <h2>CreateOrUpdateJMSModule</h2>
        <p>Creates or updates JMS Module</p>
        
        <h3>CreateOrUpdateJMSModule Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Unique name of the JMS system Module to be created or updated.</td>
            </tr>
            
            <tr>
                <td class="required">Target WLS Instance List</td>
                <td>Comma delimited set of Weblogic Server instances (Standalone or cluster) to which the JMS system module would be deployed.</td>
            </tr>
            
            <tr>
                <td >Update Action</td>
                <td>
This parameter controls as to what the Update Action should be when a JMS Module with the same name exists:<br/><b>Do Nothing  (Default)</b> -  The procedure will take no action upon an update (i.e., will be a NO-OP), if this option is chosen.<br/><b>Remove and Create</b> - The procedure would remove existing JMS Module and recreate it based on new parameters passed.<br/><b>Selective Update</b> - The procedure would update existing JMS Module. In this case <b>Target WLS List</b> will be updated.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateOrUpdateJMSModule/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Module was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateOrUpdateJMSModule/Summary.png" />
<p>In the <b>CreateOrUpdateJMSModule</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;TestModule&quot;
Got parameter &quot;ecp_weblogic_target_list&quot; with value &quot;AdminServer&quot;
Got parameter &quot;ecp_weblogic_update_action&quot; with value &quot;do_nothing&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/create_or_update_jms_module.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25633_20180607045655/exec_217323896594554.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25633_20180607045655/exec_217323896594554.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25633_20180607045655/exec_217323896594554.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] JMS System Module TestModule does not exist
[WLST INFO] Adding target Server &quot;AdminServer&quot; to the list of targets
[WLST INFO] No targets to remove
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
SUMMARY: Created JMS System Module TestModule, Added 1 target(s), No targets were removed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSModuleSubdeployment">
        <h2>CreateOrUpdateJMSModuleSubdeployment</h2>
        <p>Creates or updates JMS Module Subdeployment</p>
        
        <h3>CreateOrUpdateJMSModuleSubdeployment Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Unique name of the JMS Module in which the Sub-Deployment should be created. Note that this module should exist already for this Procedure to succeed.</td>
            </tr>
            
            <tr>
                <td class="required">Subdeployment Name</td>
                <td>Name of the Subdeployment to be created or updated.</td>
            </tr>
            
            <tr>
                <td class="required">Target WLS Instance List</td>
                <td>1 or more comma separated list of Servers or Clusters that constitute the Sub-Deployment. In essence a Sub-Deployment provides a way to group multiple targets to which JMS Resources can be created on.</td>
            </tr>
            
            <tr>
                <td >Update Action</td>
                <td>This parameter controls as to what the Update Action should be when a JMS Subdeployment with the same name exists :
Do Nothing  (Default) -  The procedure will take no action upon an update (i.e., will be a NO-OP), if this option is chosen.
Remove and Create - The procedure would remove existing JMS Subdeployment and recreate it based on new parameters passed.
Selective Update - The procedure would update target servers for the existing JMS Subdeployment.
</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateOrUpdateSubdeployment/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Module Subdeployment was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateOrUpdateSubdeployment/Summary.png" />
<p>In the <b>CreateOrUpdateJMSModuleSubdeployment</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;SystemModule-0&quot;
Got parameter &quot;ecp_weblogic_subdeployment_name&quot; with value &quot;MyQueue&quot;
Got parameter &quot;ecp_weblogic_subdeployment_target_list&quot; with value &quot;AdminServer&quot;
Got parameter &quot;ecp_weblogic_update_action&quot; with value &quot;do_nothing&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/create_or_update_jms_module_subdeployment.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_27048_20180611060733/exec_403411813739896.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_27048_20180611060733/exec_403411813739896.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_27048_20180611060733/exec_403411813739896.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] Subdeployment MyQueue does not exist
[WLST INFO] Adding target Server &quot;AdminServer&quot; to the list of targets
[WLST INFO] No targets to remove
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
SUMMARY: Created SubDeployment MyQueue in the module SystemModule-0: Added 1 target(s), No targets to remove
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSQueue">
        <h2>CreateOrUpdateJMSQueue</h2>
        <p>Creates or updates JMS Queue</p>
        
            <p>This procedure is used to create and configure a new JMS Queue for an <strong>existing</strong> JMS module or update an existing JMS Queue.</p>

        
        <h3>CreateOrUpdateJMSQueue Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Queue Name</td>
                <td>Unique name of the JMS Queue Name that is going to be created or updated.
</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Name of the JMS module in which the JMS Queue is created. If there is already a JMS Queue with the specified name, it will be updated. The specified JMS Module should exist, if the module does not exist, the procedure will fail.
</td>
            </tr>
            
            <tr>
                <td >JNDI Name</td>
                <td>JNDI Name is used to lookup the JMS Queue using JNDI lookup. If the JMS Queue is created without passing this parameter, it can be only used in an Application Scoped context.
</td>
            </tr>
            
            <tr>
                <td >Subdeployment Name</td>
                <td>Name of Subdeployment. Required in order to deploy the Queue. If this is not specified the Queue will not be usable.
</td>
            </tr>
            
            <tr>
                <td >Target JMS Server</td>
                <td>JMS Server  to which the Topic  would be targeted to. Required only if Subdeployment Name is specified.
</td>
            </tr>
            
            <tr>
                <td >Update Action</td>
                <td>
This parameter controls as to what the Update Action should be when a JMS Queue with the same name exists:<br/><b>Do Nothing  (Default)</b> -  The procedure will take no action upon an update (i.e., will be a NO-OP), if this option is chosen.<br/><b>Remove and Create</b> - The procedure would remove existing JMS Queue and recreate it based on new parameters passed. If Subdeployment name is provided, the subdeployment will be removed and created too.<br/><b>Selective Update</b> - The procedure would update existing JMS Queue. The parameters for selective update are <b>JNDI Name</b> and <b>Subdeployment Name</b>. The targeting for Subdeployment will not be changed.
        </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>
Use this option to specify general or advanced parameters, message thresholds and quota, message delivery overrides, message logging and message delivery failure options, e.g., <b>MaximumMessageSize=1024</b>. Parameters should be in the form of key=value pairs. Group and property name are separated by '.'. Several options are separated by a newline, e.g.<br/><pre>
MessageLoggingParams.MessageLoggingEnabled=false
DeliveryFailureParams.RedeliveryLimit=3
</pre></td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateOrUpdateJMSQueue/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Queue was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateOrUpdateJMSQueue/Summary.png" />
<p>In the <b>CreateOrUpdateJMSQueue</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin C-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_additional_options&quot; with value &quot;&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;TestModule&quot;
Got parameter &quot;ecp_weblogic_jms_queue_name&quot; with value &quot;SampleQueue&quot;
Got parameter &quot;ecp_weblogic_jndi_name&quot; with value &quot;weblogic.test.Queue&quot;
Got parameter &quot;ecp_weblogic_subdeployment_name&quot; with value &quot;SampleQueue&quot;
Got parameter &quot;ecp_weblogic_target_jms_server&quot; with value &quot;TestServer&quot;
Got parameter &quot;ecp_weblogic_update_action&quot; with value &quot;do_nothing&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/create_or_update_jms_queue.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25637_20180607052545/exec_265381669060536.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25637_20180607052545/exec_265381669060536.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25637_20180607052545/exec_265381669060536.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] Subdeployment SampleQueue does not exist
[WLST INFO] Created Subdeployment SampleQueue
[WLST INFO] Adding JMSServer &quot;TestServer&quot; to the list of targets
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
Already in requested Edit Tree

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] JMS Queue SampleQueue does not exist
[WLST INFO] Created Queue SampleQueue
[WLST INFO] Set JNDI Name weblogic.test.Queue
[WLST INFO] Subdeployment has not changed
[WLST INFO] Options:
[WLST INFO] Additional Options: {}
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSServer">
        <h2>CreateOrUpdateJMSServer</h2>
        <p>Creates or updates JMS Server</p>
        
        <h3>CreateOrUpdateJMSServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Server Name</td>
                <td>Unique name of the JMS Server to be created or updated.</td>
            </tr>
            
            <tr>
                <td >Target WLS Instance</td>
                <td>The WLS Instance (Standalone or Cluster) to which this Server should be targeted. However note if this is not specified the JMS Server is not usable.</td>
            </tr>
            
            <tr>
                <td >Update Action</td>
                <td>
This parameter controls as to what the Update Action should be when a JMS Module with the same name exists:<br/><b>Do Nothing  (Default)</b> -  The procedure will take no action upon an update (i.e., will be a NO-OP), if this option is chosen.<br/><b>Remove and Create</b> - The procedure would remove existing JMS Module and recreate it based on new parameters passed.<br/><b>Selective Update</b> - The procedure would update existing JMS Module. The only parameter for update will be <b>Target WLS Instance</b>.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateJMSServer/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Server was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateJMSServer/Summary.png" />
<p>In the <b>CreateOrUpdateJMSServer</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin C-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_server_name&quot; with value &quot;TestServer&quot;
Got parameter &quot;ecp_weblogic_target&quot; with value &quot;AdminServer&quot;
Got parameter &quot;ecp_weblogic_update_action&quot; with value &quot;do_nothing&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/create_or_update_jms_server.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25632_20180607045124/exec_323699757152446.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25632_20180607045124/exec_323699757152446.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25632_20180607045124/exec_323699757152446.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] JMS Server TestServer does not exist
[WLST INFO] Adding target Server &quot;AdminServer&quot;
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
SUMMARY: Created JMS Server TestServer, Added target Server &quot;AdminServer&quot;
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSTopic">
        <h2>CreateOrUpdateJMSTopic</h2>
        <p>Creates or updates JMS Topic</p>
        
        <h3>CreateOrUpdateJMSTopic Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Topic Name</td>
                <td>Unique name of the JMS Topic that is going to be created or updated.
</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Name of the JMS module in which the JMS Topic is created. If there is already a JMS Topic with the specified name, it will be updated.
</td>
            </tr>
            
            <tr>
                <td >JNDI Name</td>
                <td>JNDI Name is used to lookup the JMS Topic using JNDI lookup. If the JMS Topic is created without passing this parameter, it can be only used in an Application Scoped context.
</td>
            </tr>
            
            <tr>
                <td >Subdeployment Name</td>
                <td>Name of Subdeployment. Required in order to deploy the Topic. If this is not specified the Topic will not be usable.
</td>
            </tr>
            
            <tr>
                <td >Target JMS Server</td>
                <td>JMS Server  to which the Topic  would be targeted to. Required only if Subdeployment Name is specified.
</td>
            </tr>
            
            <tr>
                <td >Update Action</td>
                <td>
This parameter controls as to what the Update Action should be when a JMS Topic with the same name exists:<br/><b>Do Nothing  (Default)</b> -  The procedure will take no action upon an update (i.e., will be a NO-OP), if this option is chosen.<br/><b>Remove and Create</b> - The procedure would remove existing JMS Topic and recreate it based on new parameters passed. If subdeployment name is specified, it will be recreated too.<br/><b>Selective Update</b> - The procedure would update existing JMS Topic. The parameters for selective update are <b>JNDI Name</b> and <b>Subdeployment Name</b>.
        </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Use this option to specify general or advanced parameters, message thresholds and quota, message delivery overrides, message logging and message delivery failure options, topic multicast parameters. Parameters should be in the form of key=value pairs. Group and property name are separated by '.'. E.g., <b>Multicast.MulticastTimeToLive=5</b>. Several options are separated by a newline:<br/><pre>
MessagingPerformancePreference=30
DeliveryFailureParams.RedeliveryLimit=5
</pre></td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/CreateOrUpdateJMSTopic/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Topic was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateOrUpdateJMSTopic/Summary.png" />
<p>In the <b>CreateOrUpdateJMSTopic</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_additional_options&quot; with value &quot;&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;TestModule&quot;
Got parameter &quot;ecp_weblogic_jms_topic_name&quot; with value &quot;SampleTopic&quot;
Got parameter &quot;ecp_weblogic_jndi_name&quot; with value &quot;weblogic.test.Topic&quot;
Got parameter &quot;ecp_weblogic_subdeployment_name&quot; with value &quot;SampleTopic&quot;
Got parameter &quot;ecp_weblogic_target_jms_server&quot; with value &quot;TestServer&quot;
Got parameter &quot;ecp_weblogic_update_action&quot; with value &quot;do_nothing&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/create_or_update_jms_topic.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25639_20180607053241/exec_344164956000842.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25639_20180607053241/exec_344164956000842.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25639_20180607053241/exec_344164956000842.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] Subdeployment SampleTopic does not exist
[WLST INFO] Created Subdeployment SampleTopic
[WLST INFO] Adding JMSServer &quot;TestServer&quot; to the list of targets
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
Already in requested Edit Tree

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
No stack trace available.
[WLST INFO] JMS Topic SampleTopic does not exist
[WLST INFO] Created Topic SampleTopic
[WLST INFO] Set JNDI Name weblogic.test.Topic
[WLST INFO] Subdeployment has not changed
[WLST INFO] Options:
[WLST INFO] Additional Options: {}
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="CreateTemplate">
        <h2>CreateTemplate</h2>
        <p>Creates a domain template from the existing domain.</p>
        
            <p>This procedure creates a domain template on the WebLogic server.</p>

        
        <h3>CreateTemplate Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Directory</td>
                <td>Name of the domain directory from which you want to create the template.</td>
            </tr>
            
            <tr>
                <td class="required">Template Name</td>
                <td>Name (use .jar extension) and location of the domain template to store the domain configuration information. A domain template is a JAR file that contains domain configuration documents, applications, security data, startup scripts, and other information needed to create a WebLogic domain.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/CreateTemplate/EC-WLSCreateTemplateStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateTemplate/EC-WLSCreateTemplateStatus3.png" />
<p>In the <b>CreateTemplate</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CreateTemplate/EC-WLSCreateTemplateStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateUser">
        <h2>CreateUser</h2>
        <p>Create a user</p>
        
            <p>This procedure creates a new user on the WebLogic server.</p>

        
        <h3>CreateUser Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">User Credentials</td>
                <td>User credentials(Username and password).</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            <tr>
                <td >User Description</td>
                <td>Description about the user.</td>
            </tr>
            
            <tr>
                <td >Overwrite Existing User</td>
                <td>If enabled it will delete already existing user of the same name and recreate new user.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/CreateUser/EC-WLSCreateUserStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/CreateUser/EC-WLSCreateUserStatus3.png" />
<p>In the <b>CreateUser</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/CreateUser/EC-WLSCreateUserStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="DeleteCluster">
        <h2>DeleteCluster</h2>
        <p>Delete a cluster.</p>
        
            <p>This procedure can be used to delete a cluster.</p>

        
        <h3>DeleteCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the cluster to be deleted.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/DeleteCluster/EC-WLSDeleteClusterStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the server was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteCluster/EC-WLSDeleteClusterStatus3.png" />
<p>In the <b>DeleteCluster</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/DeleteCluster/EC-WLSDeleteClusterStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="DeleteConnectionFactory">
        <h2>DeleteConnectionFactory</h2>
        <p>Deletes Connection Factory</p>
        
        <h3>DeleteConnectionFactory Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Connection Factory Name</td>
                <td>Unique name of the Connection Factory that is going to be deleted. If the Connection Factory with the specified name does not exist, the procedure will fail.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Name of the JMS module in which the Connection Factory was created.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteConnectionFactory/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Connection Factory was deleted.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteConnectionFactory/Summary.png" />
<p>In the <b>DeleteConnectionFactory</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;cf_name&quot; with value &quot;TestCF&quot;
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;jms_module_name&quot; with value &quot;TestModule&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/delete_connection_factory.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25643_20180607054551/exec_735556895409005.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25643_20180607054551/exec_735556895409005.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25643_20180607054551/exec_735556895409005.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
[WLST INFO] Removed Connection Factory TestCF from the module TestModule
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="DeleteDatasource">
        <h2>DeleteDatasource</h2>
        <p>Deletes a Datasource</p>
        
        <h3>DeleteDatasource Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Datasource Name</td>
                <td>
      The unique name that identifies this Datasource in the WebLogic domain to delete it.
    </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteDataSource/DeleteDataSource2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was deleted successfully.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteDataSource/DeleteDataSource3.png" />
<p>In the <b>DeleteDatasource</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/DeleteDataSource/DeleteDataSource4.png" />
</p>

        </p>
        
    </div>

    
    <div id="DeleteGroup">
        <h2>DeleteGroup</h2>
        <p>Delete a group</p>
        
            <p>This procedure delets a user group on the WebLogic server.</p>

        
        <h3>DeleteGroup Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Group Name</td>
                <td>Name of the group to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/DeleteGroup/EC-WLSDeleteGroupStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteGroup/EC-WLSDeleteGroupStatus3.png" />
<p>In the <b>DeleteGroup</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/DeleteGroup/EC-WLSDeleteGroupStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="DeleteJMSModule">
        <h2>DeleteJMSModule</h2>
        <p>Deletes JMS Module</p>
        
        <h3>DeleteJMSModule Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Unique name of the JMS Module that needs to be deleted.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteJMSModule/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Module was deleted.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteJMSModule/Summary.png" />
<p>In the <b>DeleteJMSModule</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;TestModule&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/delete_jms_module.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25644_20180607054757/exec_169758432417386.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25644_20180607054757/exec_169758432417386.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25644_20180607054757/exec_169758432417386.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
[WLST INFO] JMS Module TestModule has been deleted
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
SUMMARY: Deleted JMS System Module TestModule
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="DeleteJMSModuleSubdeployment">
        <h2>DeleteJMSModuleSubdeployment</h2>
        <p>Deletes JMS Module Subdeployment</p>
        
        <h3>DeleteJMSModuleSubdeployment Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Unique name of the JMS Module in which the Sub-Deployment should be created. Note that this module should exist already for this Procedure to succeed.</td>
            </tr>
            
            <tr>
                <td class="required">Subdeployment Name</td>
                <td>Name of the Subdeployment to be created or updated.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteSubdeployment/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Subdeployment was deleted.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteSubdeployment/Summary.png" />
<p>In the <b>DeleteJMSModuleSubdeployment</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;SystemModule-0&quot;
Got parameter &quot;ecp_weblogic_subdeployment_name&quot; with value &quot;MyQueue&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/delete_jms_module_subdeployment.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_27049_20180611060932/exec_313584566273004.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_27049_20180611060932/exec_313584566273004.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_27049_20180611060932/exec_313584566273004.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
[WLST INFO] Removed subdeployment MyQueue from the module SystemModule-0
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
SUMMARY: Subdeployment MyQueue has been deleted from JMS Module SystemModule-0
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="DeleteJMSQueue">
        <h2>DeleteJMSQueue</h2>
        <p>Deletes JMS Queue</p>
        
        <h3>DeleteJMSQueue Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Queue Name</td>
                <td>Unique name of the JMS Queue that needs to be deleted. If JMS Queue with the specified name does not exist, the procedure will fail.
</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Name of the JMS module in which the JMS Queue was created.
</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteJMSQueue/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Queue was deleted.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteJMSQueue/Summary.png" />
<p>In the <b>DeleteJMSQueue</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;TestModule&quot;
Got parameter &quot;ecp_weblogic_jms_queue_name&quot; with value &quot;SampleQueue&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/delete_jms_queue.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25640_20180607054123/exec_471983963746803.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25640_20180607054123/exec_471983963746803.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25640_20180607054123/exec_471983963746803.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
[WLST INFO] Removed JMS Queue SampleQueue from the module TestModule
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="DeleteJMSServer">
        <h2>DeleteJMSServer</h2>
        <p>Deletes JMS Server</p>
        
        <h3>DeleteJMSServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Server Name</td>
                <td>Unique name of the JMS Server that needs to deleted. If the server with the specified name does not exist, the procedure will fail.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteJMSServer/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Server was deleted.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteJMSServer/Summary.png" />
<p>In the <b>DeleteJMSServer</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_server_name&quot; with value &quot;TestServer&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/delete_jms_server.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25645_20180607055037/exec_330800760610238.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25645_20180607055037/exec_330800760610238.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25645_20180607055037/exec_330800760610238.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
[WLST INFO] Removed JMS Server TestServer
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="DeleteJMSTopic">
        <h2>DeleteJMSTopic</h2>
        <p>Deletes JMS Topic</p>
        
        <h3>DeleteJMSTopic Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Topic Name</td>
                <td>Unique name of the JMS Topic that is going to be deleted. If JMS Topic with the specified name does not exist in the JMS Module, the procedure will fail.
</td>
            </tr>
            
            <tr>
                <td class="required">JMS Module Name</td>
                <td>Name of the JMS module in which the JMS Topic was created.
</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/DeleteJMSTopic/Form.png" />
<h2>Output</h2>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The JMS Queue was deleted.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteJMSTopic/Summary.png" />
<p>In the <b>DeleteJMSTopic</b> step, click the Log button to see the diagnostic information:</p>
<pre><code>Using plugin EC-WebLogic-3.3.0.0
Got parameter &quot;configname&quot; with value &quot;demo&quot;
Got parameter &quot;ecp_weblogic_jms_module_name&quot; with value &quot;TestModule&quot;
Got parameter &quot;ecp_weblogic_jms_topic_name&quot; with value &quot;SampleTopic&quot;
Processing template /myProject/jython/preamble.jython
Processing template /myProject/jython/delete_jms_topic.jython
Script path: /opt/electriccloud/electriccommander/workspace/job_25641_20180607054339/exec_788152218826341.jython
Running command: '/u01/oracle/oracle_common/common/bin/wlst.sh' '/opt/electriccloud/electriccommander/workspace/job_25641_20180607054339/exec_788152218826341.jython'
Unlinking file /opt/electriccloud/electriccommander/workspace/job_25641_20180607054339/exec_788152218826341.jython
EXIT_CODE: 0
STDOUT:
Initializing WebLogic Scripting Tool (WLST) ...

Welcome to WebLogic Server Administration Scripting Shell

Type help() for help on available commands

WebLogic version is: WebLogic Server 12.2.1.3.0
Connecting to t3://localhost:7001 with userid weblogic ...
Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;base_domain&quot;.

Warning: An insecure protocol was used to connect to the server.
To ensure on-the-wire security, the SSL port or Admin port should be used instead.

Location changed to edit tree.
This is a writable tree with DomainMBean as the root.
To make changes you will need to start an edit session via startEdit().
For more help, use help('edit').

Starting an edit session ...
Started edit session, be sure to save and activate your changes once you are done.
[WLST INFO] Removed JMS Topic SampleTopic from the module TestModule
Saving all your changes ...
Saved all your changes successfully.
Activating all your changes, this may take a while ...
The edit lock associated with this edit session is released once the activation is completed.
Activation completed
STDERR:
DONE
</code></pre>

        </p>
        
    </div>

    
    <div id="DeleteManagedServer">
        <h2>DeleteManagedServer</h2>
        <p>Delete a Managed Server.</p>
        
        <h3>DeleteManagedServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of the managed server to be deleted.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/DeleteMangedServer/EC-WLSDeleteManagedServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Managed Server was deleted successfully.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteMangedServer/EC-WLSDeleteManagedServer3.png" />
<p>In the <b>DeleteManagedServer</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/DeleteMangedServer/EC-WLSDeleteManagedServer4.png" />
</p>

        </p>
        
    </div>

    
    <div id="DeleteUser">
        <h2>DeleteUser</h2>
        <p>Delete a user</p>
        
            <p>This procedure deletes a user on the WebLogic server.</p>

        
        <h3>DeleteUser Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">User Name</td>
                <td>Name of the user to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/DeleteUser/EC-WLSDeleteUserStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
<img src="../../plugins/EC-WebLogic/images/DeleteUser/EC-WLSDeleteUserStatus3.png" />
<p>In the <b>DeleteUser</b> step, click the Log button to see the diagnostic information:
<br />
<img src="../../plugins/EC-WebLogic/images/DeleteUser/EC-WLSDeleteUserStatus4.png" />
</p>

        </p>
        
    </div>

    
    <div id="DeployApp">
        <h2>DeployApp</h2>
        <p>Deploys or redeploys an application or module</p>
        
            <p>This procedure deploys an application or a module using WLST. If application or module is already exists, it will be redeployed.</p>

        
        <h3>DeployApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>
            Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.
        </td>
            </tr>
            
            <tr>
                <td class="required">Wlst Script Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Deployment name to assign to a newly-deployed application or standalone module. i.e: 'webapp'.</td>
            </tr>
            
            <tr>
                <td class="required">Is library?</td>
                <td>Select this parameter if the application is library.</td>
            </tr>
            
            <tr>
                <td class="required">Application Path</td>
                <td>Absolute path of the application to deploy. i.e: '/path/to/webapp.war' or 'c:/mydir/webapp.war'.</td>
            </tr>
            
            <tr>
                <td class="required">Targets</td>
                <td>Targets on which to deploy the application or module (comma-separated list of the target servers, clusters, or virtual hosts).</td>
            </tr>
            
            <tr>
                <td >Stage mode</td>
                <td>
            Staging mode for the application you are deploying.<br/>
            Possible values are: stage, nostage, and external_stage.<br/>
            If not provided, default stage mode will be used.<br/>
            See <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="http://docs.oracle.com/middleware/12212/wls/DEPGD/deploy.htm#DEPGD235" target="_blank">Oracle documentation</a> for details.
        </td>
            </tr>
            
            <tr>
                <td >Deployment plan path</td>
                <td>
            Path to read a deployment plan (if there is one) or to save a new one from the Deployment plan content parameter.
        </td>
            </tr>
            
            <tr>
                <td >Plan version</td>
                <td>Deployment plan version.</td>
            </tr>
            
            <tr>
                <td >Deployment plan content</td>
                <td>
            A WebLogic Server deployment plan is an XML document that you use to configure an application for deployment to a specific WebLogic Server environment.
        </td>
            </tr>
            
            <tr>
                <td >Overwrite deployment plan?</td>
                <td>
            If checked, deployment plan will be overwritten, if deployment plan content has been provided and deployment plan file already exists.<br/>
            This option defaults to false.
        </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>
            Comma-separated list of deployment options, specified as name-value pairs.<br/>
            Refer to WLST deploy documentation (The options, which are not included in this form).
        </td>
            </tr>
            
            <tr>
                <td >Archive version</td>
                <td>
            Archive version number.<br/>
            Is used for production redeployment, specifies the application version which is going to be retired, while versionIdentifier specifies a new version.<br/>
            Archive version stays along with the new one.
        </td>
            </tr>
            
            <tr>
                <td >Retire gracefully?</td>
                <td>
            Retirement policy to gracefully retire an application only after it has completed all in-flight work.<br/>
            This policy is only meaningful for stop and redeploy operations and is mutually exclusive to the retire timeout policy.
        </td>
            </tr>
            
            <tr>
                <td >Retire timeout</td>
                <td>
            Time (in seconds) WLST waits before retiring an application that has been replaced with a newer version.<br/>
            This option default to -1, which specifies graceful timeout.
        </td>
            </tr>
            
            <tr>
                <td >Version identifier</td>
                <td>
            Version identifier that is being used by production redeployment. A string, that uniquely identifies the current application version across all versions of the same application.
        </td>
            </tr>
            
            <tr>
                <td >Upload?</td>
                <td>
            Optional. Boolean value specifying whether the application files are uploaded to the WebLogic Server Administration Server's upload directory prior to deployment.<br/>
            Use this option when you are on a different machine from the Administration Server and you cannot copy the deployment files by other means. <br/>
            This option defaults to false.
        </td>
            </tr>
            
            <tr>
                <td >Remote?</td>
                <td>
            Boolean value specifying whether the operation will be remote from the file system that contains the source.
            Use this option when you are on a different machine from the Administration Server and the deployment files are<br/>
            already at the specified location where the Administration Server is located.
            This option defaults to false.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/DeployApp/EC-WLSDeployApp2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow.
The application was deployed successfully.</p>
<img src="../../plugins/EC-WebLogic/images/DeployApp/EC-WLSDeployApp3.png" />
<p>In the <b>DeployApp</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/DeployApp/EC-WLSDeployApp4.png" />.

        </p>
        
    </div>

    
    <div id="RemoveUserFromGroup">
        <h2>RemoveUserFromGroup</h2>
        <p>Remove a user from group.</p>
        
            <p>This procedure removes a User from the specified Group.</p>

        
        <h3>RemoveUserFromGroup Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">User Name</td>
                <td>Name of the user to be removed.</td>
            </tr>
            
            <tr>
                <td class="required">Group Name</td>
                <td>Name of the group from which user is to be removed.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/RemoveUserFromGroup/EC-WLSRemoveUserFromGroupStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the page was checked successfully.</p>
<img src="../../plugins/EC-WebLogic/images/RemoveUserFromGroup/EC-WLSRemoveUserFromGroupStatus3.png" />
<p>In the <b>RemoveUserFromGroup</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/RemoveUserFromGroup/EC-WLSRemoveUserFromGroupStatus4.png" />
<p><b>Note:</b> In the URL, the protocol is http. For this procedure,ElectricFlow uses an internal method to test the status of the page URLs with the original http protocol used in the web browsers.</p>

        </p>
        
    </div>

    
    <div id="ResumeServer">
        <h2>ResumeServer</h2>
        <p>Resumes the provided server</p>
        
            <p>This procedure moves a server instance from the STANDBY state to the RUNNING state.</p>

        
        <h3>ResumeServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of the server to resume. (Required)</td>
            </tr>
            
            <tr>
                <td >Block</td>
                <td>Boolean value specifying whether WLST should block user interaction until the server is resumed. This argument defaults to false, indicating that user interaction is not blocked. In this case, WLST returns control to the user after issuing the command and assigns the task MBean associated with the current task to a variable that you can use to check its status. If you are importing WLST as a Jython module, as described in Importing WLST as a Jython Module, block is always set to true.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/ResumeServer/EC-WLSResumeServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server instance successfully
moved from the STANDBY state to the RUNNING state.</p>
<img src="../../plugins/EC-WebLogic/images/ResumeServer/EC-WLSResumeServer3.png" />
<p>In the <b>ResumeServer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/ResumeServer/EC-WLSResumeServer4.png" />

        </p>
        
    </div>

    
    <div id="RunDeployer">
        <h2>RunDeployer</h2>
        <p>Runs weblogic.Deployer in a free-mode</p>
        
            <p>This procedure runs weblogic.Deployer tool in a free mode.
The weblogic.Deployer tool is a Java-based deployment tool that
provides a command-line interface to the WebLogic Server deployment API.</p>

        
        <h3>RunDeployer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Command To Use</td>
                <td>
      The weblogic.Deployer command to use. i.e: '-deploy', '-undeploy', '-stop' or '-listapps'.
    </td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>
      Java parameters to pass. i.e: '-verbose'.
    </td>
            </tr>
            
            <tr>
                <td >Configuration Name</td>
                <td>
      Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.
    </td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for weblogic.Deployer.</td>
            </tr>
            
            <tr>
                <td class="required">Java Absolute Path</td>
                <td>Absolute path of java. i.e: 'java', 'java.exe' or '/path/to/java'.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>
      Name of the application to manage. i.e: 'webapp'.
    </td>
            </tr>
            
            <tr>
                <td class="required">setDomainEnv Script Absolute Path</td>
                <td>
      Absolute path of the setDomainEnv script, including filename and extension. i.e: '/path/to/setDomainEnv.sh' or 'setDomainEnv.cmd'.
    </td>
            </tr>
            
            <tr>
                <td class="required">weblogic jar Absolute Path</td>
                <td>
    Absolute path of the weblogic jar, needed to run the weblogic.Deployer in a free-mode. In Windows environment, if the jar is already added to the enviroment classpath variable, then is not necesary to include it. In Linux environment you must include the path. i.e: '/path/to/weblogic.jar' or '/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar'.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/RunDeployer/EC-WLSRunDep2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The weblogic.Deployer tool was run
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/RunDeployer/EC-WLSRunDep3.png" />
<p>In the <b>RunDeployer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/RunDeployer/EC-WLSRunDep4.png" />

        </p>
        
    </div>

    
    <div id="RunWLST">
        <h2>RunWLST</h2>
        <p>Runs Jython scripts using weblogic.WLST</p>
        
            <p>This procedure runs Jython scripts using weblogic.WLST. The
WebLogic Scripting Tool (WLST) is a command-line
scripting interface that system administrators and
operators use to monitor and manage WebLogic Server
instances and domains. The WLST scripting environment
is based on the Java scripting interpreter, Jython. In
addition to WebLogic scripting functions, you can use
common features of interpreted languages, including
local variables, conditional variables, and flow
control statements.</p>

        
        <h3>RunWLST Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td >Script File Absolute Path</td>
                <td>
      Absolute path of a Jython script containing the desired job. The path is used only if 'Supplied File' is selected in the 'Script File Source' parameter. i.e: '/path/to/scriptfile.jython'.
    </td>
            </tr>
            
            <tr>
                <td class="required">Script File Source</td>
                <td>
      Indicates the source of the script file to execute. Either a existent file in the path defined in the 'scriptfile' parameter OR a new one using the code specified in scriptfile parameter.
    </td>
            </tr>
            
            <tr>
                <td >Script File</td>
                <td>
      Content of the script file to run if 'New Script File' option is chosen in the 'Script File Source' parameter.
    </td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for weblogic.WLST.</td>
            </tr>
            
            <tr>
                <td >Additional Environment Vairables</td>
                <td>
      Additional environment variables as comma separated key-value pairs.
      For example: JAVA_HOME => '/path/to/java/home', other_env => 'myenv'
    </td>
            </tr>
            
            <tr>
                <td >weblogic jar Absolute Path</td>
                <td>Absolute path of the weblogic jar, needed to run the run Jython scripts using weblogic.WLST. In Windows environment, if the jar is already added to the enviroment classpath variable, then is not necesary to include it. In Linux environment you must include the path. i.e: '/path/to/weblogic.jar' or '/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar'.
    </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/RunWLST/runWLSTexample.png" />
<h3>Output</h3>
<p>To see a complete example, go to the <i>Examples and Use Cases</i> section.</p>

        </p>
        
    </div>

    
    <div id="StartAdminServer">
        <h2>StartAdminServer</h2>
        <p>Starts a WebLogic Admin Server</p>
        
            <p>This procedure starts the WebLogic Administration Server.</p>

        
        <h3>StartAdminServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Script Location</td>
                <td>Absolute path of the startWeblogic script, including filename and extension. i.e: '/path/to/startWeblogic.cmd'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Admin Server Instance Name</td>
                <td>Instance name of the Admin Server to start. i.e: 'AdminServer'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Config Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'. (Required)</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the server. Note that the step has a "Time Limit" property, so if this property is set to less than the parameter it will abort the step early. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StartAdministrationServer/EC-WLSStartAdministrationServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was started
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StartAdministrationServer/EC-WLSStartAdministrationServer3.png" />
<p>In the <b>StartAdminServer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StartAdministrationServer/EC-WLSStartAdministrationServer4.png" />.

        </p>
        
    </div>

    
    <div id="StartApp">
        <h2>StartApp</h2>
        <p>Starts an application</p>
        
            <p>This procedures starts an application.</p>
<p>If application is already started, warning will be thrown.</p>

        
        <h3>StartApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>
      Name of the application to start. i.e: 'webapp'.
    </td>
            </tr>
            
            <tr>
                <td >Application Version</td>
                <td>
          Specific application version to be started.
      </td>
            </tr>
            
            <tr>
                <td >Additional options</td>
                <td>
          Additional options for startApplication API. (See deploy function for reference).
      </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StartApp/EC-WLSStartApp2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application
was started successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StartApp/EC-WLSStartApp3.png" />
<p>In the <b>StartApp</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StartApp/EC-WLSStartApp4.png" />.

        </p>
        
    </div>

    
    <div id="StartCluster">
        <h2>StartCluster</h2>
        <p>Starts a cluster</p>
        
            <p>This procedures starts a cluster.</p>
<p>If cluster has a servers in the RUNNING state, warning will be thrown.</p>

        
        <h3>StartCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>
      Name of the cluster to start. i.e: 'mycluster'.
    </td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>
          Timeout in seconds for cluster start.
      </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StartCluster/EC-WLSStartCluster2.png" />
<h3>Output</h3>
<p>
After the job runs, you can view the results on the Job Details page in ElectricFlow. The cluster was started successfully.
</p>
<img src="../../plugins/EC-WebLogic/images/StartCluster/EC-WLSStartCluster3.png" />
<p>
In the <b>StartCluster</b> step, click the Log button to see the diagnostic information:
</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StartCluster/EC-WLSStartCluster4.png" />.

        </p>
        
    </div>

    
    <div id="StartManagedServer">
        <h2>StartManagedServer</h2>
        <p>Starts a WebLogic Managed Server</p>
        
            <p>This procedure starts a WebLogic Managed Server. A WebLogic Server
administration domain is a logically related group of
WebLogic Server resources. Usually, you configure a
domain to include additional WebLogic Server instances
called Managed Servers. You deploy Web applications,
EJBs, and other resources onto the Managed Servers and
use the Administration Server for configuration and
management purposes only. The Node Manager
must be running before you run this procedure.</p>
<p>In order to start the managed server, a file called
"boot.properties" must be created in the path
"$DOMAIN_DIR$/servers/myserver/security", and this file
must have the credentials needed to start the server.
For example:</p>
<p>username=weblogic</p>
<p>password=w3blogic</p>

        
        <h3>StartManagedServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Script Location</td>
                <td>Absolute path of the start server script, including filename and extension. i.e: '/path/to/startManagedServer.cmd'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Instance Name</td>
                <td>Instance name of the Managed Server to start. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Config Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Admin Server URL</td>
                <td>URL from the Admin Server (including protocol and port). (Required)</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'. (Required)</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the server. Note that the step has a "Time Limit" property, so if this property is set to less than the parameter it will abort the step early. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StartManagedServer/EC-WLSStartManagedServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was started
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StartManagedServer/EC-WLSStartManagedServer3.png" />
<p>In the <b>StartManagedServer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StartManagedServer/EC-WLSStartManagedServer4.png" />

        </p>
        
    </div>

    
    <div id="StartNodeManager">
        <h2>StartNodeManager</h2>
        <p>Start the WebLogic Node Manager</p>
        
            <p>This procedure starts the WebLogic Node Manager. It is a
WebLogic Server utility that enables you to start, shut
down, and restart Administration Server and Managed
Server instances from a remote location. Although Node
Manager is optional, we recommend that you start the
Node Manager if your WebLogic Server environment hosts
applications with high availability requirements.</p>

        
        <h3>StartNodeManager Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Node Manager Script Location</td>
                <td>
      Absolute path of the startNodeManager script, including filename and extension. i.e: '/Oracle/Middleware/wlserver_10.3/server/bin/startNodeManager.cmd'.
    </td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>
      Defines the time in seconds that the job wait to test the status of the node manager. Note that the step has a "Time Limit" property, so if this property is set to less than the parameter it will abort the step early. Blank implies no wait time (URL only checked one time).
    </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StartNodeManager/EC-WLSStartNodeManager2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Node Manager was started
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StartNodeManager/EC-WLSStartNodeManager3.png" />
<p>In the <b>StartNodeManager</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StartNodeManager/EC-WLSStartNodeManager4.png" />

        </p>
        
    </div>

    
    <div id="StopAdminServer">
        <h2>StopAdminServer</h2>
        <p>Stops a WebLogic Admin Server</p>
        
            <p>This procedure stops a WebLogic Administration Server.</p>

        
        <h3>StopAdminServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Script Location</td>
                <td>Absolute path of the stopWeblogic script, including filename and extension. i.e: '/path/to/stopWeblogic.cmd'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Config Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StopAdminServer/EC-WLSStopAdminServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was stopped
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StopAdminServer/EC-WLSStopAdminServer3.png" />
<p>In the <b>StopAdminServer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StopAdminServer/EC-WLSStopAdminServer4.png" />

        </p>
        
    </div>

    
    <div id="StopApp">
        <h2>StopApp</h2>
        <p>Stop an application</p>
        
            <p>This procedure stops an application.</p>
<p>If application is already stopped, warning will be thrown.</p>

        
        <h3>StopApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>
      Name of the application to start. i.e: 'webapp'.
    </td>
            </tr>
            
            <tr>
                <td >Application Version</td>
                <td>
        Specific application version to be stopped.
    </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>
        Additional options for stopApplication API. (See deploy function for reference).
    </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StopApp/EC-WLSStopApp2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was stopped
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StopApp/EC-WLSStopApp3.png" />
<p>In the <b>StopApp</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StopApp/EC-WLSStopApp4.png" />.

        </p>
        
    </div>

    
    <div id="StopCluster">
        <h2>StopCluster</h2>
        <p>Stops a cluster</p>
        
            <p>This procedures stops a cluster.</p>
<p>If cluster has a servers in the SHUTDOWN state, warning will be thrown.</p>

        
        <h3>StopCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>
            Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.
        </td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>
            Name of the cluster to stop. i.e: 'mycluster'.
        </td>
            </tr>
            
            <tr>
                <td >Shutdown Timeout</td>
                <td>
            Timeout in seconds for cluster shutdown.
        </td>
            </tr>
            
            <tr>
                <td >Force Shutdown?</td>
                <td>
            Value specifying whether WLST should terminate a server instance or a cluster without waiting for the active sessions to complete. This argument defaults to false, indicating that all active sessions must complete before shutdown.
        </td>
            </tr>
            
            <tr>
                <td >Ignore Sessions?</td>
                <td>
            Value specifying whether WLST should drop all HTTP sessions immediately or wait for HTTP sessions to complete or timeout while shutting down. This argument defaults to false, indicating that all HTTP sessions must complete or timeout.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StopCluster/EC-WLSStopCluster2.png" />
<h3>Output</h3>
<p>
After the job runs, you can view the results on the Job Details page in ElectricFlow. The cluster was stopped successfully.
</p>
<img src="../../plugins/EC-WebLogic/images/StopCluster/EC-WLSStopCluster3.png" />
<p>
In the <b>StopCluster</b> step, click the Log button to see the diagnostic information:
</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StopCluster/EC-WLSStopCluster4.png" />.

        </p>
        
    </div>

    
    <div id="StopManagedServer">
        <h2>StopManagedServer</h2>
        <p>Stops a WebLogic Managed Server</p>
        
            <p>This procedure stops a WebLogic Managed Server. The Node
Manager must be running before you run this procedure.</p>

        
        <h3>StopManagedServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Script Location</td>
                <td>Absolute path of the stop server script, including filename and extension. i.e: '/path/to/stopManagedServer.cmd'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Instance Name</td>
                <td>Instance name of the Managed Server to stop. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Config Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StopManagedServer/EC-WLSStopManagedServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was stopped successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StopManagedServer/EC-WLSStopManagedServer3.png" />
<p>In the <b>StopManagedServer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StopManagedServer/EC-WLSStopManagedServer4.png" />

        </p>
        
    </div>

    
    <div id="StopNodeManager">
        <h2>StopNodeManager</h2>
        <p>Stop the WebLogic Node Manager</p>
        
            <p>This procedure stops the WebLogic Node Manager.</p>

        
        <h3>StopNodeManager Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Config Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Host Name</td>
                <td>Host name of Node Manager. This argument defaults to localhost.</td>
            </tr>
            
            <tr>
                <td >Node Manager Port</td>
                <td>Port number of Node Manager. This argument defaults to a value that is based on the Node Manager server type, for plain type, defaults to 5556. For rsh type, defaults to 514. For ssh type, defaults to 22. For ssl type, defaults to 5556.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the domain that you want to manage. This argument defaults to mydomain.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Path</td>
                <td>Path of the domain directory to which you want to save the Node Manager secret file (nm_password.properties) and SerializedSystemIni.dat file. This argument defaults to the directory in which WLST was started.</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Node Manage Type</td>
                <td>Type of the Node Manager server. This argument defaults to ssl.</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the time in seconds that the job wait to test the status of the node manager. Note that the step has a "Time Limit" property, so if this property is set to less than the parameter it will abort the step early. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/StopNodeManager/EC-WLSStopNodeManager2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Node Manager was stopped
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/StopNodeManager/EC-WLSStopNodeManager3.png" />
<p>In the <b>StopNodeManager</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/StopNodeManager/EC-WLSStopNodeManager4.png" />

        </p>
        
    </div>

    
    <div id="SuspendServer">
        <h2>SuspendServer</h2>
        <p>Suspends the provided server</p>
        
            <p>This procedure suspends a WebLogic server.</p>

        
        <h3>SuspendServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'. (Required)</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of the server to suspend. (Required)</td>
            </tr>
            
            <tr>
                <td >Ignore Sessions</td>
                <td>Boolean value specifying whether WLST should drop all HTTP sessions immediately or wait for HTTP sessions to complete or time out while suspending. This argument defaults to false, indicating that HTTP sessions must complete or time out.</td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>Time (in seconds) the WLST waits for the server to complete in-process work before suspending the server. This argument defaults to 0 seconds, indicating that there is no timeout.</td>
            </tr>
            
            <tr>
                <td >Force</td>
                <td>Boolean value specifying whether WLST should suspend the server without waiting for active sessions to complete. This argument defaults to false, indicating that all active sessions must complete before suspending the server.</td>
            </tr>
            
            <tr>
                <td >Block</td>
                <td>Boolean value specifying whether WLST blocks user interaction until the server is started. This argument defaults to false, indicating that user interaction is not blocked. In this case, WLST returns control to the user after issuing the command and assigns the task MBean associated with the current task to a variable that you can use to check its status. If you are importing WLST as a Jython module, as described in Importing WLST as a Jython Module, block is always set to true.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/SuspendServer/EC-WLSSuspendServer2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was suspended
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/SuspendServer/EC-WLSSuspendServer3.png" />
<p>In the <b>SuspendServer</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/SuspendServer/EC-WLSSuspendServer4.png" />

        </p>
        
    </div>

    
    <div id="UndeployApp">
        <h2>UndeployApp</h2>
        <p>Stops the deployment unit and removes staged files from target servers.</p>
        
            <p>This procedure stops the deployment unit and removes staged files
from target servers.
<br/>
Contrary to the weblogic documentation in section 'Undeploying a Retiring Application' at <a href="https://docs.oracle.com/cd/E13222_01/wls/docs103/deployment/redeploy.html" target="_blank">docs.oracle.com</a>, we found that in Weblogic 11, only retired version of application is undeployed if no application version is specified.</p>

        
        <h3>UndeployApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wlst Script Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application to undeploy. i.e: 'webapp'.</td>
            </tr>
            
            <tr>
                <td >Retire Gracefully? (DEPRECATED)</td>
                <td>
            Retirement policy to gracefully retire an application only after it has completed all in-flight work.<br/>
            This policy is only meaningful for stop and redeploy operations and is mutually exclusive to the retire timeout policy.
            <b>This parameter is DEPRECATED and will be removed in the next release.</b></td>
            </tr>
            
            <tr>
                <td >Application Version</td>
                <td>
            Specifies a single application version to be undeployed. See Requirements and Restrictions for Production Redeployment for reference.
        </td>
            </tr>
            
            <tr>
                <td >Additional options</td>
                <td>Additional options for undeploy API call. (See deploy function for reference).
        </td>
            </tr>
            
            <tr>
                <td >Give Up on Error?</td>
                <td>
            If checked, any ambiguous situation will be treated as fatal error. Defaults to false.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/UndeployApp/EC-WLSUndeployApp2.png" />
<br />
</ol>
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was undeployed
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/UndeployApp/EC-WLSUndeployApp3.png" />
<p>In the <b>UndeployApp</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/UndeployApp/EC-WLSUndeployApp4.png" />.

        </p>
        
    </div>

    
    <div id="UnlockUserAccount">
        <h2>UnlockUserAccount</h2>
        <p>Unlock an user account.</p>
        
            <p>This procedure can be used to unlock a locked user account.</p>

        
        <h3>UnlockUserAccount Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">User Name</td>
                <td>Name of the user whose account is to be unlocked.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Name of the user domain.</td>
            </tr>
            
            <tr>
                <td class="required">Realm Name</td>
                <td>Name of the user realm.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebLogic/images/UnlockUserAccount/EC-WLSUnlockUserAccountStatus2.png" />
<br />
</ol>
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was undeployed
successfully.</p>
<img src="../../plugins/EC-WebLogic/images/UnlockUserAccount/EC-WLSUnlockUserAccountStatus3.png" />
<p>In the <b>UnlockUserAccount</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/UnlockUserAccount/EC-WLSUnlockUserAccountStatus4.png" />.

        </p>
        
    </div>

    
    <div id="UpdateApp">
        <h2>UpdateApp (DEPRECATED)</h2>
        <p>Update an already deployed app. (DEPRECATED)</p>
        
            <p>WARNING: This procedure is marked as deprecated and will be removed in the next releases. Please, use <a href="#UpdateAppConfig">UpdateAppConfig</a> procedure instead.</p>
<p>This procedure can be used to update an application.</p>

        
        <h3>UpdateApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application which is to be updated.</td>
            </tr>
            
            <tr>
                <td class="required">Plan Path</td>
                <td>Name of the new deployment plan file. The filename can be absolute or relative to the application directory.</td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Comma-separated list of deployment options, specified as name-value pairs.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/UpdateApp/EC-WLSUpdateAppStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was undeployed successfully.</p>
<img src="../../plugins/EC-WebLogic/images/UpdateApp/EC-WLSUpdateAppStatus3.png" />
<p>In the <b>UpdateApp</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/UpdateApp/EC-WLSUpdateAppStatus4.png" />.

        </p>
        
    </div>

    
    <div id="UpdateAppConfig">
        <h2>UpdateAppConfig</h2>
        <p>Update a configuration of an already deployed app.</p>
        
            <p>This procedure can be used to update an application configuration.</p>

        
        <h3>UpdateAppConfig Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">WLST Absolute Path</td>
                <td>Absolute path to WLST. i.e: '/path/to/wlst.cmd' or 'wlst.sh'.</td>
            </tr>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application which is to be updated.</td>
            </tr>
            
            <tr>
                <td >Application version</td>
                <td>Application version to update.</td>
            </tr>
            
            <tr>
                <td class="required">Plan Path</td>
                <td>Absolute path to the new deployment plan file.</td>
            </tr>
            
            <tr>
                <td >Deployment Plan Content</td>
                <td>Content of the deployment plan. Required, if the file mentioned in "Plan Path" doesn't exist or empty.</td>
            </tr>
            
            <tr>
                <td >Overwrite deployment plan?</td>
                <td>
            If checked, deployment plan will be overwritten, if deployment plan content has been provided and deployment plan file already exists.<br/>
            This option defaults to false.
        </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Comma-separated list of deployment options, specified as name-value pairs. For example: block=false,createPlan=true</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <br />
<img src="../../plugins/EC-WebLogic/images/UpdateAppConfig/EC-WLSUpdateAppConfigStatus2.png" />
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was undeployed successfully.</p>
<img src="../../plugins/EC-WebLogic/images/UpdateAppConfig/EC-WLSUpdateAppConfigStatus3.png" />
<p>In the <b>UpdateAppConfig</b> step, click the Log button to see the diagnostic information:</p>
<br />
<img src="../../plugins/EC-WebLogic/images/UpdateAppConfig/EC-WLSUpdateAppConfigStatus4.png" />.

        </p>
        
    </div>

    

    
    <h1 id="usecases">Use Cases</h1>

    
    <div id="RunWLST">
        <h2>Run WLST</h2>
<p>In this example, the objective is to print &quot;Hello
World!&quot; in an output device by using the <i>Supplied File</i> option
with an existing script file in a path or the <i>New
Script File</i> option with embedded code for the
<i>Script File Source</i> parameter.</p>
<ol>
    <li>Go to the Plugin Manager and select the RunWLST procedure. </li>
    <li>Select the <i>Supplied File</i> or the <i>New Script File</i> option as the <i>Script File Source</i>,
    and enter the following parameters:<br />
    This shows the parameters with the <i>Supplied File</i> option:<br />
    <img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST2.png" /> <br />
    This shows the parameters with the <i>New Script File</i> option:<br />
    <img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST3.png" />
    </li>
</ol>
<h3>Output</h3>
<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The &quot;Hello World!&quot;</p>
<p>message is successfully printed with either of the <i>Script File Source</i> options (<i>Supplied File</i> or
<i>New Script File</i>).</p>
<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST4.png" />
<p>In the <b>RunWLST</b> step, click the Log button to see the diagnostic information similar to this:</p>
<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST5.png" />
<p>This is the <i>HelloWorld.jython</i> file used in the <i>Supplied File</i> option:</p>
<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST6.png" />

    </div>
    

    

    <h1 id="releaseNotes">Release Notes</h1>
    
    <h3>@PLUGIN_KEY@ 3.3.0</h3>
    <ul>
        
        <li>Created Messaging procedures:
<ul>
  <li>Create Or Update JMS Server</li>
  <li>Delete JMS Server</li>
  <li>Create Or Update JMS Module</li>
  <li>Delete JMS Module</li>
  <li>Create Or Update Connection Factory</li>
  <li>Delete Connection Factory</li>
  <li>Create Or Update JMS Queue</li>
  <li>Delete JMS Queue</li>
  <li>Create Or Update JMS Topic</li>
  <li>Delete JMS Topic</li>
  <li>Create Or Update JMS Module Subdeployment</li>
  <li>Delete JMS Module Subdeployment</li>
</ul>
</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.2.4</h3>
    <ul>
        
        <li>Configured the plugin to allow the ElectricFlow UI to render the plugin procedure parameters entirely using the configured form XMLs.</li>
        
        <li>Enabled the plugin for managing the plugin configurations in-line when defining an application process step or a pipeline stage task.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.2.3</h3>
    <ul>
        
        <li>UpdateApp procedure has been marked as deprecated.</li>
        
        <li>Following procedures have been added:
  <ul>
      <li>UpdateAppConfig</li>
      <li>StartCluster</li>
      <li>StopCluster</li>
      <li>CheckClusterStatus</li>
  </ul>
</li>
        
        <li>Additional parameters have been added to the following procedures:
  <ul>
      <li>StartApp</li>
      <li>StopApp</li>
      <li>UndeployApp</li>
      <li>DeployApp</li>
  </ul>
</li>
        
        <li>Checkbox "Retire Gracefully?" from UndeployApp procedure has been marked as deprecated and will be removed in the next release.</li>
        
        <li>DeployApp does redeployment if application already exists.</li>
        
        <li>StartApp and StopApp have been improved and warning is being thrown if application is already in the desired state.</li>
        
        <li>StartCluster and StopCluster have been improved and warning is being thrown if cluster is already in the desired state.</li>
        
        <li>Support of named edit sessions (concurrent edit sessions) has been added. If WebLogic server doesn't have support of the named edit sessions, warning will be thrown.</li>
        
        <li>MW_HOME environment variable has been added to the plugin configuration.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.2.2</h3>
    <ul>
        
        <li>Added missing documentation.</li>
        
        <li>Fixed multiline inputs for textareas in CreateUser and CreateGroup procedures.</li>
        
        <li>Fixed issue with CreateUser and DeleteUser procedure when credentials was not found.</li>
        
        <li>Cleanup was performed.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.2.1</h3>
    <ul>
        
        <li>A lot of minor improvements and bugfixes.</li>
        
        <li><ul>
    <p>Added the following new procedures:</p>
    <li>Add Server to Cluster</li>
    <li>Add User to Group</li>
    <li>Change User Password</li>
    <li>Configure User Lockout Manager</li>
    <li>Create Cluster</li>
    <li>Create Domain</li>
    <li>Create Group</li>
    <li>Create Template</li>
    <li>Create User</li>
    <li>Delete Cluster</li>
    <li>Delete Group</li>
    <li>Delete User</li>
    <li>Remove User from Group</li>
    <li>Unlock User Account</li>
    <li>Update App</li>
</ul>
</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.0.1</h3>
    <ul>
        
        <li>Fixed issue with configurations being cached for IE.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.0.0</h3>
    <ul>
        
        <li>Refactored the CheckPageStatus, CheckServerStatus, CreateDataSource, DeleteDataSource, DeployApp, RunWLST, StartApp, StopApp, and UndeployApp procedures.</li>
        
        <li>Added link to plugin Configuration Page in plugin step panels.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.7</h3>
    <ul>
        
        <li>Fixed the manifest file.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.6</h3>
    <ul>
        
        <li>Fixed typos in references to the createDataSource and deleteDataSource files in the manifest.pl so that the files are included correctly in the plugin jar.</li>
        
        <li>Fixed errors in the createDataSource procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.5</h3>
    <ul>
        
        <li>Added four procedures to create datasources, delete datasources, suspend a server,  and resume a server.</li>
        
        <li>Fixed minor bugs.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.4</h3>
    <ul>
        
        <li>Procedure names were changed in the step picker section.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.3</h3>
    <ul>
        
        <li>Added a parameter in the start and stop server procedures to determine the maximum time in seconds to test the status of the server.</li>
        
        <li>Created two procedures to start and stop the Node Manager.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.2</h3>
    <ul>
        
        <li>Changes to Help files.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.1</h3>
    <ul>
        
        <li>Upgrade to use the new Parameter Form XML.</li>
        
        <li>Added a link directly to the new Help file.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.0</h3>
    <ul>
        
        <li>New Help Page Format.</li>
        
        <li>Add new Parameter Panels for each procedure.</li>
        
        <li>Add the <b>weblogic jar Absolute Path</b> parameter to the DeployApp, UndeployApp, StartApp, StopApp, RunDeployer and RunWLST procedures. It is required to a Linux environment to load WebLogic libreries.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.3</h3>
    <ul>
        
        <li>Add the <b>Administration Server URL</b> parameter to the StartManagedServer procedure.</li>
        
        <li>Fixed minor issues.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.1</h3>
    <ul>
        
        <li>Fix issue affecting workspace setting.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.0</h3>
    <ul>
        
        <li>Add the CheckPageStatus procedure.</li>
        
        <li>Modify the CheckServerProcedure procedure. CURL is not needed and parameters were changed.</li>
        
        <li>Fix minor bugs.</li>
        
        <li>Remove the CURL dependency.</li>
        
        <li>Add new postp matchers.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.2</h3>
    <ul>
        
        <li>Fixed minor bug on Configuration List page.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.1</h3>
    <ul>
        
        <li>Procedures that have only one step are executed using Perl directly.</li>
        
        <li>Credentials in the StartManagedServer procedure must be stored in a boot.properties file.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.0</h3>
    <ul>
        
        <li>First release.</li>
        
    </ul>
    
</div>
</body>
</html>
